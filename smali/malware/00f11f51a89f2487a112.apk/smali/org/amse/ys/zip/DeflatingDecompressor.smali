.class public Lorg/amse/ys/zip/DeflatingDecompressor;
.super Lorg/amse/ys/zip/Decompressor;
.source "DeflatingDecompressor.java"


# static fields
.field private static final IN_BUFFER_SIZE:I = 0x800

.field private static final OUT_BUFFER_SIZE:I = 0x8000


# instance fields
.field private myAvailable:I

.field private myCompressedAvailable:I

.field private final myInBuffer:[B

.field private myInBufferLength:I

.field private myInBufferOffset:I

.field private myInflatingInProgress:Z

.field private final myOutBuffer:[B

.field private myOutBufferLength:I

.field private myOutBufferOffset:I

.field private myStream:Lorg/amse/ys/zip/MyBufferedInputStream;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .prologue
    .line 7
    const-string v0, "DeflatingDecompressor"

    invoke-static {v0}, Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V

    .line 5
    return-void
.end method

.method public constructor <init>(Lorg/amse/ys/zip/MyBufferedInputStream;Lorg/amse/ys/zip/LocalFileHeader;)V
    .locals 1
    .param p1, "inputStream"    # Lorg/amse/ys/zip/MyBufferedInputStream;
    .param p2, "header"    # Lorg/amse/ys/zip/LocalFileHeader;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 28
    invoke-direct {p0}, Lorg/amse/ys/zip/Decompressor;-><init>()V

    .line 18
    const/16 v0, 0x800

    new-array v0, v0, [B

    iput-object v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBuffer:[B

    .line 21
    const v0, 0x8000

    new-array v0, v0, [B

    iput-object v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBuffer:[B

    .line 29
    invoke-virtual {p0, p1, p2}, Lorg/amse/ys/zip/DeflatingDecompressor;->reset(Lorg/amse/ys/zip/MyBufferedInputStream;Lorg/amse/ys/zip/LocalFileHeader;)V

    .line 30
    return-void
.end method

.method private native endInflating()V
.end method

.method private fillOutBuffer()V
    .locals 14
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const-wide/16 v12, 0x0

    const v11, 0xffff

    const/16 v10, 0x800

    const/4 v9, 0x0

    .line 117
    iget-boolean v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInflatingInProgress:Z

    if-nez v5, :cond_6

    .line 152
    :cond_0
    :goto_0
    return-void

    .line 122
    :cond_1
    iget v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferLength:I

    if-nez v5, :cond_2

    .line 123
    iput v9, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferOffset:I

    .line 124
    iget v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myCompressedAvailable:I

    if-ge v5, v10, :cond_3

    iget v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myCompressedAvailable:I

    move v4, v5

    .line 125
    .local v4, "toRead":I
    :goto_1
    iget-object v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myStream:Lorg/amse/ys/zip/MyBufferedInputStream;

    iget-object v6, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBuffer:[B

    invoke-virtual {v5, v6, v9, v4}, Lorg/amse/ys/zip/MyBufferedInputStream;->read([BII)I

    move-result v5

    iput v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferLength:I

    .line 126
    iget v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferLength:I

    if-ge v5, v4, :cond_4

    .line 127
    iput v9, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myCompressedAvailable:I

    .line 132
    .end local v4    # "toRead":I
    :cond_2
    :goto_2
    iget v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferLength:I

    if-eqz v5, :cond_0

    .line 135
    iget-object v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBuffer:[B

    iget v6, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferOffset:I

    iget v7, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferLength:I

    iget-object v8, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBuffer:[B

    invoke-direct {p0, v5, v6, v7, v8}, Lorg/amse/ys/zip/DeflatingDecompressor;->inflate([BII[B)J

    move-result-wide v2

    .line 136
    .local v2, "result":J
    cmp-long v5, v2, v12

    if-nez v5, :cond_5

    .line 137
    new-instance v5, Ljava/io/IOException;

    const-string v6, "cannot read from base stream"

    invoke-direct {v5, v6}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v5

    .end local v2    # "result":J
    :cond_3
    move v4, v10

    .line 124
    goto :goto_1

    .line 129
    .restart local v4    # "toRead":I
    :cond_4
    iget v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myCompressedAvailable:I

    sub-int/2addr v5, v4

    iput v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myCompressedAvailable:I

    goto :goto_2

    .line 139
    .end local v4    # "toRead":I
    .restart local v2    # "result":J
    :cond_5
    const/16 v5, 0x10

    shr-long v5, v2, v5

    long-to-int v5, v5

    and-int v0, v5, v11

    .line 140
    .local v0, "in":I
    long-to-int v5, v2

    and-int v1, v5, v11

    .line 141
    .local v1, "out":I
    iget v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferOffset:I

    add-int/2addr v5, v0

    iput v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferOffset:I

    .line 142
    iget v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferLength:I

    sub-int/2addr v5, v0

    iput v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferLength:I

    .line 143
    iput v9, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferOffset:I

    .line 144
    iput v1, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    .line 145
    const-wide v5, 0x100000000L

    and-long/2addr v5, v2

    cmp-long v5, v5, v12

    if-eqz v5, :cond_6

    .line 146
    invoke-direct {p0}, Lorg/amse/ys/zip/DeflatingDecompressor;->endInflating()V

    .line 147
    iput-boolean v9, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInflatingInProgress:Z

    .line 148
    iget-object v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myStream:Lorg/amse/ys/zip/MyBufferedInputStream;

    iget v6, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferLength:I

    invoke-virtual {v5, v6}, Lorg/amse/ys/zip/MyBufferedInputStream;->backSkip(I)V

    goto :goto_0

    .line 121
    .end local v0    # "in":I
    .end local v1    # "out":I
    .end local v2    # "result":J
    :cond_6
    iget v5, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    if-eqz v5, :cond_1

    goto :goto_0
.end method

.method private native inflate([BII[B)J
.end method

.method private native startInflating()Z
.end method


# virtual methods
.method public available()I
    .locals 1

    .prologue
    .line 59
    iget v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    return v0
.end method

.method public read()I
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const/4 v2, 0x1

    const/4 v1, -0x1

    .line 97
    iget v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    if-gtz v0, :cond_0

    move v0, v1

    .line 113
    :goto_0
    return v0

    .line 100
    :cond_0
    iget v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    if-nez v0, :cond_1

    .line 101
    invoke-direct {p0}, Lorg/amse/ys/zip/DeflatingDecompressor;->fillOutBuffer()V

    .line 103
    :cond_1
    iget v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    if-nez v0, :cond_3

    .line 104
    iget-boolean v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInflatingInProgress:Z

    if-eqz v0, :cond_2

    .line 105
    new-instance v0, Ljava/io/IOException;

    const-string v1, "cannot read from zip"

    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 107
    :cond_2
    const/4 v0, 0x0

    iput v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    move v0, v1

    .line 108
    goto :goto_0

    .line 111
    :cond_3
    iget v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    sub-int/2addr v0, v2

    iput v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    .line 112
    iget v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    sub-int/2addr v0, v2

    iput v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    .line 113
    iget-object v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBuffer:[B

    iget v1, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferOffset:I

    add-int/lit8 v2, v1, 0x1

    iput v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferOffset:I

    aget-byte v0, v0, v1

    goto :goto_0
.end method

.method public read([BII)I
    .locals 4
    .param p1, "b"    # [B
    .param p2, "off"    # I
    .param p3, "len"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 64
    iget v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    if-gtz v2, :cond_0

    .line 65
    const/4 v2, -0x1

    .line 92
    :goto_0
    return v2

    .line 67
    :cond_0
    iget v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    if-le p3, v2, :cond_1

    .line 68
    iget p3, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    .line 70
    :cond_1
    move v1, p3

    .local v1, "toFill":I
    :goto_1
    if-gtz v1, :cond_2

    .line 91
    :goto_2
    iget v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    sub-int/2addr v2, p3

    iput v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    move v2, p3

    .line 92
    goto :goto_0

    .line 71
    :cond_2
    iget v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    if-nez v2, :cond_3

    .line 72
    invoke-direct {p0}, Lorg/amse/ys/zip/DeflatingDecompressor;->fillOutBuffer()V

    .line 74
    :cond_3
    iget v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    if-nez v2, :cond_5

    .line 75
    iget-boolean v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInflatingInProgress:Z

    if-eqz v2, :cond_4

    .line 76
    new-instance v2, Ljava/io/IOException;

    const-string v3, "cannot read from zip"

    invoke-direct {v2, v3}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 78
    :cond_4
    sub-int/2addr p3, v1

    .line 79
    goto :goto_2

    .line 82
    :cond_5
    iget v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    if-ge v1, v2, :cond_7

    move v0, v1

    .line 83
    .local v0, "ready":I
    :goto_3
    if-eqz p1, :cond_6

    .line 84
    iget-object v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBuffer:[B

    iget v3, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferOffset:I

    invoke-static {v2, v3, p1, p2, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 86
    :cond_6
    add-int/2addr p2, v0

    .line 87
    iget v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferOffset:I

    add-int/2addr v2, v0

    iput v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferOffset:I

    .line 88
    sub-int/2addr v1, v0

    .line 89
    iget v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    sub-int/2addr v2, v0

    iput v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    goto :goto_1

    .line 82
    .end local v0    # "ready":I
    :cond_7
    iget v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    move v0, v2

    goto :goto_3
.end method

.method reset(Lorg/amse/ys/zip/MyBufferedInputStream;Lorg/amse/ys/zip/LocalFileHeader;)V
    .locals 3
    .param p1, "inputStream"    # Lorg/amse/ys/zip/MyBufferedInputStream;
    .param p2, "header"    # Lorg/amse/ys/zip/LocalFileHeader;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const v2, 0x7fffffff

    const/4 v1, 0x0

    .line 33
    iget-boolean v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInflatingInProgress:Z

    if-eqz v0, :cond_0

    .line 34
    invoke-direct {p0}, Lorg/amse/ys/zip/DeflatingDecompressor;->endInflating()V

    .line 35
    iput-boolean v1, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInflatingInProgress:Z

    .line 38
    :cond_0
    iput-object p1, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myStream:Lorg/amse/ys/zip/MyBufferedInputStream;

    .line 39
    iget v0, p2, Lorg/amse/ys/zip/LocalFileHeader;->CompressedSize:I

    iput v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myCompressedAvailable:I

    .line 40
    iget v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myCompressedAvailable:I

    if-gtz v0, :cond_1

    .line 41
    iput v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myCompressedAvailable:I

    .line 43
    :cond_1
    iget v0, p2, Lorg/amse/ys/zip/LocalFileHeader;->UncompressedSize:I

    iput v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    .line 44
    iget v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    if-gtz v0, :cond_2

    .line 45
    iput v2, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myAvailable:I

    .line 48
    :cond_2
    const/16 v0, 0x800

    iput v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferOffset:I

    .line 49
    iput v1, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInBufferLength:I

    .line 50
    const v0, 0x8000

    iput v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferOffset:I

    .line 51
    iput v1, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myOutBufferLength:I

    .line 53
    invoke-direct {p0}, Lorg/amse/ys/zip/DeflatingDecompressor;->startInflating()Z

    .line 54
    const/4 v0, 0x1

    iput-boolean v0, p0, Lorg/amse/ys/zip/DeflatingDecompressor;->myInflatingInProgress:Z

    .line 55
    return-void
.end method
