.class public final Lorg/amse/ys/zip/ZipFile;
.super Ljava/lang/Object;
.source "ZipFile.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lorg/amse/ys/zip/ZipFile$FileInputStreamHolder;,
        Lorg/amse/ys/zip/ZipFile$InputStreamHolder;
    }
.end annotation


# instance fields
.field private myAllFilesAreRead:Z

.field private final myFileHeaders:Ljava/util/LinkedHashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/LinkedHashMap",
            "<",
            "Ljava/lang/String;",
            "Lorg/amse/ys/zip/LocalFileHeader;",
            ">;"
        }
    .end annotation
.end field

.field private final myStoredStreams:Ljava/util/Queue;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Queue",
            "<",
            "Lorg/amse/ys/zip/MyBufferedInputStream;",
            ">;"
        }
    .end annotation
.end field

.field private final myStreamHolder:Lorg/amse/ys/zip/ZipFile$InputStreamHolder;


# direct methods
.method public constructor <init>(Ljava/lang/String;)V
    .locals 1
    .param p1, "filePath"    # Ljava/lang/String;

    .prologue
    .line 39
    new-instance v0, Lorg/amse/ys/zip/ZipFile$FileInputStreamHolder;

    invoke-direct {v0, p1}, Lorg/amse/ys/zip/ZipFile$FileInputStreamHolder;-><init>(Ljava/lang/String;)V

    invoke-direct {p0, v0}, Lorg/amse/ys/zip/ZipFile;-><init>(Lorg/amse/ys/zip/ZipFile$InputStreamHolder;)V

    .line 40
    return-void
.end method

.method public constructor <init>(Lorg/amse/ys/zip/ZipFile$InputStreamHolder;)V
    .locals 1
    .param p1, "streamHolder"    # Lorg/amse/ys/zip/ZipFile$InputStreamHolder;

    .prologue
    .line 42
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 24
    new-instance v0, Lorg/amse/ys/zip/ZipFile$1;

    invoke-direct {v0, p0}, Lorg/amse/ys/zip/ZipFile$1;-><init>(Lorg/amse/ys/zip/ZipFile;)V

    iput-object v0, p0, Lorg/amse/ys/zip/ZipFile;->myFileHeaders:Ljava/util/LinkedHashMap;

    .line 110
    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Lorg/amse/ys/zip/ZipFile;->myStoredStreams:Ljava/util/Queue;

    .line 43
    iput-object p1, p0, Lorg/amse/ys/zip/ZipFile;->myStreamHolder:Lorg/amse/ys/zip/ZipFile$InputStreamHolder;

    .line 44
    return-void
.end method

.method private createZipInputStream(Lorg/amse/ys/zip/LocalFileHeader;)Lorg/amse/ys/zip/ZipInputStream;
    .locals 1
    .param p1, "header"    # Lorg/amse/ys/zip/LocalFileHeader;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 122
    new-instance v0, Lorg/amse/ys/zip/ZipInputStream;

    invoke-direct {v0, p0, p1}, Lorg/amse/ys/zip/ZipInputStream;-><init>(Lorg/amse/ys/zip/ZipFile;Lorg/amse/ys/zip/LocalFileHeader;)V

    return-object v0
.end method

.method private findAndReadDescriptor(Lorg/amse/ys/zip/MyBufferedInputStream;Lorg/amse/ys/zip/LocalFileHeader;)V
    .locals 6
    .param p1, "baseStream"    # Lorg/amse/ys/zip/MyBufferedInputStream;
    .param p2, "header"    # Lorg/amse/ys/zip/LocalFileHeader;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 98
    invoke-static {p1, p2}, Lorg/amse/ys/zip/Decompressor;->init(Lorg/amse/ys/zip/MyBufferedInputStream;Lorg/amse/ys/zip/LocalFileHeader;)Lorg/amse/ys/zip/Decompressor;

    move-result-object v1

    .line 99
    .local v1, "decompressor":Lorg/amse/ys/zip/Decompressor;
    const/4 v2, 0x0

    .line 101
    .local v2, "uncompressedSize":I
    :goto_0
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/16 v5, 0x800

    invoke-virtual {v1, v3, v4, v5}, Lorg/amse/ys/zip/Decompressor;->read([BII)I

    move-result v0

    .line 102
    .local v0, "blockSize":I
    if-gtz v0, :cond_0

    .line 107
    iput v2, p2, Lorg/amse/ys/zip/LocalFileHeader;->UncompressedSize:I

    .line 108
    return-void

    .line 105
    :cond_0
    add-int/2addr v2, v0

    .line 100
    goto :goto_0
.end method

.method private readAllHeaders()V
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 76
    iget-boolean v1, p0, Lorg/amse/ys/zip/ZipFile;->myAllFilesAreRead:Z

    if-eqz v1, :cond_0

    .line 77
    return-void

    .line 79
    :cond_0
    const/4 v1, 0x1

    iput-boolean v1, p0, Lorg/amse/ys/zip/ZipFile;->myAllFilesAreRead:Z

    .line 81
    invoke-virtual {p0}, Lorg/amse/ys/zip/ZipFile;->getBaseStream()Lorg/amse/ys/zip/MyBufferedInputStream;

    move-result-object v0

    .line 82
    .local v0, "baseStream":Lorg/amse/ys/zip/MyBufferedInputStream;
    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lorg/amse/ys/zip/MyBufferedInputStream;->setPosition(I)V

    .line 83
    iget-object v1, p0, Lorg/amse/ys/zip/ZipFile;->myFileHeaders:Ljava/util/LinkedHashMap;

    invoke-virtual {v1}, Ljava/util/LinkedHashMap;->clear()V

    .line 87
    :goto_0
    const/4 v1, 0x0

    :try_start_0
    invoke-direct {p0, v0, v1}, Lorg/amse/ys/zip/ZipFile;->readFileHeader(Lorg/amse/ys/zip/MyBufferedInputStream;Ljava/lang/String;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_0

    .line 89
    :catchall_0
    move-exception v1

    .line 90
    invoke-virtual {p0, v0}, Lorg/amse/ys/zip/ZipFile;->storeBaseStream(Lorg/amse/ys/zip/MyBufferedInputStream;)V

    .line 91
    throw v1
.end method

.method private readFileHeader(Lorg/amse/ys/zip/MyBufferedInputStream;Ljava/lang/String;)Z
    .locals 4
    .param p1, "baseStream"    # Lorg/amse/ys/zip/MyBufferedInputStream;
    .param p2, "fileToFind"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const/4 v3, 0x0

    .line 55
    new-instance v0, Lorg/amse/ys/zip/LocalFileHeader;

    invoke-direct {v0}, Lorg/amse/ys/zip/LocalFileHeader;-><init>()V

    .line 56
    .local v0, "header":Lorg/amse/ys/zip/LocalFileHeader;
    invoke-virtual {v0, p1}, Lorg/amse/ys/zip/LocalFileHeader;->readFrom(Lorg/amse/ys/zip/MyBufferedInputStream;)V

    .line 58
    iget v1, v0, Lorg/amse/ys/zip/LocalFileHeader;->Signature:I

    const v2, 0x4034b50

    if-eq v1, v2, :cond_0

    move v1, v3

    .line 72
    :goto_0
    return v1

    .line 61
    :cond_0
    iget-object v1, v0, Lorg/amse/ys/zip/LocalFileHeader;->FileName:Ljava/lang/String;

    if-eqz v1, :cond_1

    .line 62
    iget-object v1, p0, Lorg/amse/ys/zip/ZipFile;->myFileHeaders:Ljava/util/LinkedHashMap;

    iget-object v2, v0, Lorg/amse/ys/zip/LocalFileHeader;->FileName:Ljava/lang/String;

    invoke-virtual {v1, v2, v0}, Ljava/util/LinkedHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 63
    iget-object v1, v0, Lorg/amse/ys/zip/LocalFileHeader;->FileName:Ljava/lang/String;

    invoke-virtual {v1, p2}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 64
    const/4 v1, 0x1

    goto :goto_0

    .line 67
    :cond_1
    iget v1, v0, Lorg/amse/ys/zip/LocalFileHeader;->Flags:I

    and-int/lit8 v1, v1, 0x8

    if-nez v1, :cond_2

    .line 68
    iget v1, v0, Lorg/amse/ys/zip/LocalFileHeader;->CompressedSize:I

    invoke-virtual {p1, v1}, Lorg/amse/ys/zip/MyBufferedInputStream;->skip(I)V

    :goto_1
    move v1, v3

    .line 72
    goto :goto_0

    .line 70
    :cond_2
    invoke-direct {p0, p1, v0}, Lorg/amse/ys/zip/ZipFile;->findAndReadDescriptor(Lorg/amse/ys/zip/MyBufferedInputStream;Lorg/amse/ys/zip/LocalFileHeader;)V

    goto :goto_1
.end method


# virtual methods
.method declared-synchronized getBaseStream()Lorg/amse/ys/zip/MyBufferedInputStream;
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 117
    monitor-enter p0

    :try_start_0
    iget-object v1, p0, Lorg/amse/ys/zip/ZipFile;->myStoredStreams:Ljava/util/Queue;

    invoke-interface {v1}, Ljava/util/Queue;->poll()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lorg/amse/ys/zip/MyBufferedInputStream;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 118
    .local v0, "baseStream":Lorg/amse/ys/zip/MyBufferedInputStream;
    if-eqz v0, :cond_0

    move-object v1, v0

    :goto_0
    monitor-exit p0

    return-object v1

    :cond_0
    :try_start_1
    new-instance v1, Lorg/amse/ys/zip/MyBufferedInputStream;

    iget-object v2, p0, Lorg/amse/ys/zip/ZipFile;->myStreamHolder:Lorg/amse/ys/zip/ZipFile$InputStreamHolder;

    invoke-direct {v1, v2}, Lorg/amse/ys/zip/MyBufferedInputStream;-><init>(Lorg/amse/ys/zip/ZipFile$InputStreamHolder;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 117
    .end local v0    # "baseStream":Lorg/amse/ys/zip/MyBufferedInputStream;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getEntrySize(Ljava/lang/String;)I
    .locals 1
    .param p1, "entryName"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 126
    invoke-virtual {p0, p1}, Lorg/amse/ys/zip/ZipFile;->getHeader(Ljava/lang/String;)Lorg/amse/ys/zip/LocalFileHeader;

    move-result-object v0

    iget v0, v0, Lorg/amse/ys/zip/LocalFileHeader;->UncompressedSize:I

    return v0
.end method

.method public getHeader(Ljava/lang/String;)Lorg/amse/ys/zip/LocalFileHeader;
    .locals 7
    .param p1, "entryName"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    const-string v6, "Entry "

    const-string v5, " is not found"

    .line 134
    iget-object v2, p0, Lorg/amse/ys/zip/ZipFile;->myFileHeaders:Ljava/util/LinkedHashMap;

    invoke-virtual {v2}, Ljava/util/LinkedHashMap;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_1

    .line 135
    iget-object v2, p0, Lorg/amse/ys/zip/ZipFile;->myFileHeaders:Ljava/util/LinkedHashMap;

    invoke-virtual {v2, p1}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lorg/amse/ys/zip/LocalFileHeader;

    .line 136
    .local v1, "header":Lorg/amse/ys/zip/LocalFileHeader;
    if-eqz v1, :cond_0

    .line 151
    :goto_0
    return-object v1

    .line 139
    :cond_0
    iget-boolean v2, p0, Lorg/amse/ys/zip/ZipFile;->myAllFilesAreRead:Z

    if-eqz v2, :cond_1

    .line 140
    new-instance v2, Lorg/amse/ys/zip/ZipException;

    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "Entry "

    invoke-direct {v3, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " is not found"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Lorg/amse/ys/zip/ZipException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 144
    .end local v1    # "header":Lorg/amse/ys/zip/LocalFileHeader;
    :cond_1
    invoke-virtual {p0}, Lorg/amse/ys/zip/ZipFile;->getBaseStream()Lorg/amse/ys/zip/MyBufferedInputStream;

    move-result-object v0

    .line 145
    .local v0, "baseStream":Lorg/amse/ys/zip/MyBufferedInputStream;
    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lorg/amse/ys/zip/MyBufferedInputStream;->setPosition(I)V

    .line 147
    :cond_2
    :try_start_0
    invoke-direct {p0, v0, p1}, Lorg/amse/ys/zip/ZipFile;->readFileHeader(Lorg/amse/ys/zip/MyBufferedInputStream;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 149
    iget-object v2, p0, Lorg/amse/ys/zip/ZipFile;->myFileHeaders:Ljava/util/LinkedHashMap;

    invoke-virtual {v2, p1}, Ljava/util/LinkedHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lorg/amse/ys/zip/LocalFileHeader;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 150
    .restart local v1    # "header":Lorg/amse/ys/zip/LocalFileHeader;
    if-eqz v1, :cond_3

    .line 154
    invoke-virtual {p0, v0}, Lorg/amse/ys/zip/ZipFile;->storeBaseStream(Lorg/amse/ys/zip/MyBufferedInputStream;)V

    goto :goto_0

    .line 153
    .end local v1    # "header":Lorg/amse/ys/zip/LocalFileHeader;
    :catchall_0
    move-exception v2

    .line 154
    invoke-virtual {p0, v0}, Lorg/amse/ys/zip/ZipFile;->storeBaseStream(Lorg/amse/ys/zip/MyBufferedInputStream;)V

    .line 155
    throw v2

    .line 154
    .restart local v1    # "header":Lorg/amse/ys/zip/LocalFileHeader;
    :cond_3
    invoke-virtual {p0, v0}, Lorg/amse/ys/zip/ZipFile;->storeBaseStream(Lorg/amse/ys/zip/MyBufferedInputStream;)V

    .line 156
    new-instance v2, Lorg/amse/ys/zip/ZipException;

    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "Entry "

    invoke-direct {v3, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " is not found"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Lorg/amse/ys/zip/ZipException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method public getInputStream(Ljava/lang/String;)Ljava/io/InputStream;
    .locals 1
    .param p1, "entryName"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 130
    invoke-virtual {p0, p1}, Lorg/amse/ys/zip/ZipFile;->getHeader(Ljava/lang/String;)Lorg/amse/ys/zip/LocalFileHeader;

    move-result-object v0

    invoke-direct {p0, v0}, Lorg/amse/ys/zip/ZipFile;->createZipInputStream(Lorg/amse/ys/zip/LocalFileHeader;)Lorg/amse/ys/zip/ZipInputStream;

    move-result-object v0

    return-object v0
.end method

.method public headers()Ljava/util/Collection;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Collection",
            "<",
            "Lorg/amse/ys/zip/LocalFileHeader;",
            ">;"
        }
    .end annotation

    .prologue
    .line 48
    :try_start_0
    invoke-direct {p0}, Lorg/amse/ys/zip/ZipFile;->readAllHeaders()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 51
    :goto_0
    iget-object v0, p0, Lorg/amse/ys/zip/ZipFile;->myFileHeaders:Ljava/util/LinkedHashMap;

    invoke-virtual {v0}, Ljava/util/LinkedHashMap;->values()Ljava/util/Collection;

    move-result-object v0

    return-object v0

    .line 49
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method declared-synchronized storeBaseStream(Lorg/amse/ys/zip/MyBufferedInputStream;)V
    .locals 1
    .param p1, "baseStream"    # Lorg/amse/ys/zip/MyBufferedInputStream;

    .prologue
    .line 113
    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lorg/amse/ys/zip/ZipFile;->myStoredStreams:Ljava/util/Queue;

    invoke-interface {v0, p1}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 114
    monitor-exit p0

    return-void

    .line 113
    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method
