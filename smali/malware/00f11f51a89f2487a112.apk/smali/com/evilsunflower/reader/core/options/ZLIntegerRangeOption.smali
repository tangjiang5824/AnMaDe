.class public final Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;
.super Lcom/evilsunflower/reader/core/options/ZLOption;
.source "ZLIntegerRangeOption.java"


# instance fields
.field public final MaxValue:I

.field public final MinValue:I

.field private final myDefaultValue:I

.field private myValue:I


# direct methods
.method public constructor <init>(Ljava/lang/String;Ljava/lang/String;III)V
    .locals 1
    .param p1, "group"    # Ljava/lang/String;
    .param p2, "optionName"    # Ljava/lang/String;
    .param p3, "minValue"    # I
    .param p4, "maxValue"    # I
    .param p5, "defaultValue"    # I

    .prologue
    .line 30
    invoke-direct {p0, p1, p2}, Lcom/evilsunflower/reader/core/options/ZLOption;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 31
    iput p3, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MinValue:I

    .line 32
    iput p4, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MaxValue:I

    .line 33
    iget v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MinValue:I

    if-ge p5, v0, :cond_1

    .line 34
    iget p5, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MinValue:I

    .line 38
    :cond_0
    :goto_0
    iput p5, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myDefaultValue:I

    .line 39
    iput p5, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myValue:I

    .line 40
    return-void

    .line 35
    :cond_1
    iget v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MaxValue:I

    if-le p5, v0, :cond_0

    .line 36
    iget p5, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MaxValue:I

    goto :goto_0
.end method


# virtual methods
.method public getValue()I
    .locals 3

    .prologue
    .line 43
    iget-boolean v2, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myIsSynchronized:Z

    if-nez v2, :cond_2

    .line 44
    const/4 v2, 0x0

    invoke-virtual {p0, v2}, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->getConfigValue(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 45
    .local v1, "value":Ljava/lang/String;
    if-eqz v1, :cond_1

    .line 47
    :try_start_0
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 48
    .local v0, "intValue":I
    iget v2, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MinValue:I

    if-ge v0, v2, :cond_3

    .line 49
    iget v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MinValue:I

    .line 53
    :cond_0
    :goto_0
    iput v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myValue:I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 57
    .end local v0    # "intValue":I
    :cond_1
    :goto_1
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myIsSynchronized:Z

    .line 59
    .end local v1    # "value":Ljava/lang/String;
    :cond_2
    iget v2, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myValue:I

    return v2

    .line 50
    .restart local v0    # "intValue":I
    .restart local v1    # "value":Ljava/lang/String;
    :cond_3
    :try_start_1
    iget v2, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MaxValue:I

    if-le v0, v2, :cond_0

    .line 51
    iget v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MaxValue:I
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_0

    .line 54
    .end local v0    # "intValue":I
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method public setValue(I)V
    .locals 1
    .param p1, "value"    # I

    .prologue
    .line 63
    iget v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MinValue:I

    if-ge p1, v0, :cond_1

    .line 64
    iget p1, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MinValue:I

    .line 68
    :cond_0
    :goto_0
    iget-boolean v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myIsSynchronized:Z

    if-eqz v0, :cond_2

    iget v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myValue:I

    if-ne v0, p1, :cond_2

    .line 78
    :goto_1
    return-void

    .line 65
    :cond_1
    iget v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MaxValue:I

    if-le p1, v0, :cond_0

    .line 66
    iget p1, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->MaxValue:I

    goto :goto_0

    .line 71
    :cond_2
    iput p1, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myValue:I

    .line 72
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myIsSynchronized:Z

    .line 73
    iget v0, p0, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->myDefaultValue:I

    if-ne p1, v0, :cond_3

    .line 74
    invoke-virtual {p0}, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->unsetConfigValue()V

    goto :goto_1

    .line 76
    :cond_3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/evilsunflower/reader/core/options/ZLIntegerRangeOption;->setConfigValue(Ljava/lang/String;)V

    goto :goto_1
.end method
