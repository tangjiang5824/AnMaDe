.class public Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;
.super Ljava/lang/Object;
.source "ZLLanguageDetector.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;,
        Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;
    }
.end annotation


# static fields
.field private static SYMBOL_TYPE:[C


# instance fields
.field private myNonUtf8Matchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;",
            ">;"
        }
    .end annotation
.end field

.field private myUtf8Matchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method static constructor <clinit>()V
    .locals 5

    .prologue
    const/4 v4, 0x3

    const/4 v3, 0x2

    const/4 v2, 0x1

    .line 21
    const/16 v0, 0x100

    new-array v0, v0, [C

    const/4 v1, 0x0

    .line 22
    aput-char v2, v0, v1

    aput-char v2, v0, v2

    aput-char v2, v0, v3

    aput-char v2, v0, v4

    const/4 v1, 0x4

    aput-char v2, v0, v1

    const/4 v1, 0x5

    aput-char v2, v0, v1

    const/4 v1, 0x6

    aput-char v2, v0, v1

    const/4 v1, 0x7

    aput-char v2, v0, v1

    const/16 v1, 0x8

    aput-char v2, v0, v1

    const/16 v1, 0x9

    aput-char v2, v0, v1

    const/16 v1, 0xa

    aput-char v2, v0, v1

    const/16 v1, 0xb

    aput-char v2, v0, v1

    const/16 v1, 0xc

    aput-char v2, v0, v1

    const/16 v1, 0xd

    aput-char v2, v0, v1

    const/16 v1, 0xe

    aput-char v2, v0, v1

    const/16 v1, 0xf

    aput-char v2, v0, v1

    const/16 v1, 0x10

    .line 23
    aput-char v2, v0, v1

    const/16 v1, 0x11

    aput-char v2, v0, v1

    const/16 v1, 0x12

    aput-char v2, v0, v1

    const/16 v1, 0x13

    aput-char v2, v0, v1

    const/16 v1, 0x14

    aput-char v2, v0, v1

    const/16 v1, 0x15

    aput-char v2, v0, v1

    const/16 v1, 0x16

    aput-char v2, v0, v1

    const/16 v1, 0x17

    aput-char v2, v0, v1

    const/16 v1, 0x18

    aput-char v2, v0, v1

    const/16 v1, 0x19

    aput-char v2, v0, v1

    const/16 v1, 0x1a

    aput-char v2, v0, v1

    const/16 v1, 0x1b

    aput-char v2, v0, v1

    const/16 v1, 0x1c

    aput-char v2, v0, v1

    const/16 v1, 0x1d

    aput-char v2, v0, v1

    const/16 v1, 0x1e

    aput-char v2, v0, v1

    const/16 v1, 0x1f

    aput-char v2, v0, v1

    const/16 v1, 0x20

    .line 24
    aput-char v2, v0, v1

    const/16 v1, 0x21

    aput-char v2, v0, v1

    const/16 v1, 0x22

    aput-char v2, v0, v1

    const/16 v1, 0x23

    aput-char v2, v0, v1

    const/16 v1, 0x24

    aput-char v2, v0, v1

    const/16 v1, 0x25

    aput-char v2, v0, v1

    const/16 v1, 0x26

    aput-char v2, v0, v1

    const/16 v1, 0x28

    aput-char v2, v0, v1

    const/16 v1, 0x29

    aput-char v2, v0, v1

    const/16 v1, 0x2a

    aput-char v2, v0, v1

    const/16 v1, 0x2b

    aput-char v3, v0, v1

    const/16 v1, 0x2c

    aput-char v2, v0, v1

    const/16 v1, 0x2d

    aput-char v2, v0, v1

    const/16 v1, 0x2e

    aput-char v2, v0, v1

    const/16 v1, 0x2f

    aput-char v3, v0, v1

    const/16 v1, 0x30

    .line 25
    aput-char v3, v0, v1

    const/16 v1, 0x31

    aput-char v3, v0, v1

    const/16 v1, 0x32

    aput-char v3, v0, v1

    const/16 v1, 0x33

    aput-char v3, v0, v1

    const/16 v1, 0x34

    aput-char v3, v0, v1

    const/16 v1, 0x35

    aput-char v3, v0, v1

    const/16 v1, 0x36

    aput-char v3, v0, v1

    const/16 v1, 0x37

    aput-char v3, v0, v1

    const/16 v1, 0x38

    aput-char v3, v0, v1

    const/16 v1, 0x39

    aput-char v3, v0, v1

    const/16 v1, 0x3a

    aput-char v2, v0, v1

    const/16 v1, 0x3b

    aput-char v2, v0, v1

    const/16 v1, 0x3c

    aput-char v3, v0, v1

    const/16 v1, 0x3d

    aput-char v2, v0, v1

    const/16 v1, 0x3e

    aput-char v4, v0, v1

    const/16 v1, 0x3f

    aput-char v2, v0, v1

    const/16 v1, 0x40

    .line 26
    aput-char v2, v0, v1

    const/16 v1, 0x5b

    .line 27
    aput-char v2, v0, v1

    const/16 v1, 0x5c

    aput-char v3, v0, v1

    const/16 v1, 0x5d

    aput-char v2, v0, v1

    const/16 v1, 0x5e

    aput-char v2, v0, v1

    const/16 v1, 0x5f

    aput-char v2, v0, v1

    const/16 v1, 0x60

    .line 28
    aput-char v2, v0, v1

    const/16 v1, 0x7b

    .line 29
    aput-char v2, v0, v1

    const/16 v1, 0x7c

    aput-char v2, v0, v1

    const/16 v1, 0x7d

    aput-char v2, v0, v1

    const/16 v1, 0x7e

    aput-char v2, v0, v1

    const/16 v1, 0x7f

    aput-char v2, v0, v1

    .line 21
    sput-object v0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->SYMBOL_TYPE:[C

    .line 12
    return-void
.end method

.method public constructor <init>()V
    .locals 8

    .prologue
    .line 49
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 13
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    iput-object v6, p0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->myUtf8Matchers:Ljava/util/ArrayList;

    .line 14
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    iput-object v6, p0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->myNonUtf8Matchers:Ljava/util/ArrayList;

    .line 50
    invoke-static {}, Lcom/evilsunflower/reader/core/language/ZLLanguageUtil;->patternsFile()Lcom/evilsunflower/reader/core/filesystem/ZLFile;

    move-result-object v6

    invoke-virtual {v6}, Lcom/evilsunflower/reader/core/filesystem/ZLFile;->children()Ljava/util/List;

    move-result-object v6

    invoke-interface {v6}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v6

    :cond_0
    :goto_0
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-nez v7, :cond_1

    .line 70
    return-void

    .line 50
    :cond_1
    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/evilsunflower/reader/core/filesystem/ZLFile;

    .line 51
    .local v1, "file":Lcom/evilsunflower/reader/core/filesystem/ZLFile;
    invoke-virtual {v1}, Lcom/evilsunflower/reader/core/filesystem/ZLFile;->getShortName()Ljava/lang/String;

    move-result-object v5

    .line 52
    .local v5, "name":Ljava/lang/String;
    const/16 v7, 0x5f

    invoke-virtual {v5, v7}, Ljava/lang/String;->indexOf(I)I

    move-result v2

    .line 53
    .local v2, "index":I
    const/4 v7, -0x1

    if-eq v2, v7, :cond_0

    .line 54
    const/4 v7, 0x0

    invoke-virtual {v5, v7, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v3

    .line 55
    .local v3, "language":Ljava/lang/String;
    add-int/lit8 v7, v2, 0x1

    invoke-virtual {v5, v7}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v0

    .line 56
    .local v0, "encoding":Ljava/lang/String;
    new-instance v4, Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLLanguagePatternBasedMatcher;

    new-instance v7, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;

    invoke-direct {v7, p0, v3, v0}, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;-><init>(Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;Ljava/lang/String;Ljava/lang/String;)V

    invoke-direct {v4, v1, v7}, Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLLanguagePatternBasedMatcher;-><init>(Lcom/evilsunflower/reader/core/filesystem/ZLFile;Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;)V

    .line 57
    .local v4, "matcher":Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;
    const-string v7, "UTF-8"

    if-ne v0, v7, :cond_2

    .line 58
    iget-object v7, p0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->myUtf8Matchers:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 59
    :cond_2
    const-string v7, "US-ASCII"

    if-ne v0, v7, :cond_3

    .line 60
    iget-object v7, p0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->myUtf8Matchers:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 61
    iget-object v7, p0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->myNonUtf8Matchers:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 63
    :cond_3
    iget-object v7, p0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->myNonUtf8Matchers:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0
.end method


# virtual methods
.method public findInfo([BII)Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;
    .locals 22
    .param p1, "buffer"    # [B
    .param p2, "length"    # I
    .param p3, "matchingCriterion"    # I

    .prologue
    .line 76
    const/4 v14, 0x0

    .line 77
    .local v14, "start":I
    move/from16 v7, p2

    .line 79
    .local v7, "end":I
    sget-object v6, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;->ASCII:Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;

    .line 81
    .local v6, "encodingType":Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;
    const/4 v12, 0x0

    .line 82
    .local v12, "nonLeadingCharsCounter":I
    const/4 v13, 0x0

    .local v13, "ptr":I
    :goto_0
    if-ne v13, v7, :cond_0

    .line 106
    :goto_1
    sget-object v19, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;->UTF8:Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;

    move-object v0, v6

    move-object/from16 v1, v19

    if-ne v0, v1, :cond_7

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->myUtf8Matchers:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v16, v19

    .line 108
    .local v16, "wbMatchers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    :goto_2
    const/16 v18, 0x0

    .line 109
    .local v18, "wordStart":I
    const/4 v4, 0x0

    .line 110
    .local v4, "containsSpecialSymbols":Z
    const-string v17, ""

    .line 111
    .local v17, "word":Ljava/lang/String;
    const/4 v13, 0x0

    :goto_3
    if-ne v13, v7, :cond_8

    .line 141
    const/4 v8, 0x0

    .line 143
    .local v8, "info":Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v9

    .local v9, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    :goto_4
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v19

    if-nez v19, :cond_c

    .line 153
    sget-object v19, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;->OTHER:Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;

    .line 165
    if-eqz v8, :cond_e

    .line 166
    sget-object v19, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;->UTF8:Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;

    move-object v0, v6

    move-object/from16 v1, v19

    if-ne v0, v1, :cond_e

    .line 167
    move-object v0, v8

    iget-object v0, v0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;->Encoding:Ljava/lang/String;

    move-object/from16 v19, v0

    const-string v20, "UTF-8"

    move-object/from16 v0, v19

    move-object/from16 v1, v20

    if-eq v0, v1, :cond_e

    .line 168
    new-instance v19, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;

    move-object v0, v8

    iget-object v0, v0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;->Language:Ljava/lang/String;

    move-object/from16 v20, v0

    const-string v21, "UTF-8"

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    move-object/from16 v2, v20

    move-object/from16 v3, v21

    invoke-direct {v0, v1, v2, v3}, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;-><init>(Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;Ljava/lang/String;Ljava/lang/String;)V

    .line 170
    :goto_5
    return-object v19

    .line 83
    .end local v4    # "containsSpecialSymbols":Z
    .end local v8    # "info":Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;
    .end local v9    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    .end local v16    # "wbMatchers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    .end local v17    # "word":Ljava/lang/String;
    .end local v18    # "wordStart":I
    :cond_0
    if-nez v12, :cond_5

    .line 84
    aget-byte v19, p1, v13

    move/from16 v0, v19

    and-int/lit16 v0, v0, 0x80

    move/from16 v19, v0

    if-eqz v19, :cond_1

    .line 85
    sget-object v6, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;->UTF8:Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;

    .line 86
    aget-byte v19, p1, v13

    move/from16 v0, v19

    and-int/lit16 v0, v0, 0xe0

    move/from16 v19, v0

    const/16 v20, 0xc0

    move/from16 v0, v19

    move/from16 v1, v20

    if-ne v0, v1, :cond_2

    .line 87
    const/4 v12, 0x1

    .line 82
    :cond_1
    :goto_6
    add-int/lit8 v13, v13, 0x1

    goto :goto_0

    .line 88
    :cond_2
    aget-byte v19, p1, v13

    move/from16 v0, v19

    and-int/lit16 v0, v0, 0xf0

    move/from16 v19, v0

    const/16 v20, 0xe0

    move/from16 v0, v19

    move/from16 v1, v20

    if-ne v0, v1, :cond_3

    .line 89
    const/4 v12, 0x2

    goto :goto_6

    .line 90
    :cond_3
    aget-byte v19, p1, v13

    move/from16 v0, v19

    and-int/lit16 v0, v0, 0xf8

    move/from16 v19, v0

    const/16 v20, 0xf0

    move/from16 v0, v19

    move/from16 v1, v20

    if-ne v0, v1, :cond_4

    .line 91
    const/4 v12, 0x3

    goto :goto_6

    .line 93
    :cond_4
    sget-object v6, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;->OTHER:Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;

    .line 94
    goto/16 :goto_1

    .line 98
    :cond_5
    aget-byte v19, p1, v13

    move/from16 v0, v19

    and-int/lit16 v0, v0, 0xc0

    move/from16 v19, v0

    const/16 v20, 0x80

    move/from16 v0, v19

    move/from16 v1, v20

    if-eq v0, v1, :cond_6

    .line 99
    sget-object v6, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;->OTHER:Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;

    .line 100
    goto/16 :goto_1

    .line 102
    :cond_6
    add-int/lit8 v12, v12, -0x1

    goto :goto_6

    .line 106
    :cond_7
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->myNonUtf8Matchers:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v16, v19

    goto/16 :goto_2

    .line 112
    .restart local v4    # "containsSpecialSymbols":Z
    .restart local v16    # "wbMatchers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    .restart local v17    # "word":Ljava/lang/String;
    .restart local v18    # "wordStart":I
    :cond_8
    sget-object v19, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector;->SYMBOL_TYPE:[C

    aget-byte v20, p1, v13

    aget-char v19, v19, v20

    packed-switch v19, :pswitch_data_0

    .line 111
    :goto_7
    :pswitch_0
    add-int/lit8 v13, v13, 0x1

    goto/16 :goto_3

    .line 116
    :pswitch_1
    if-nez v4, :cond_a

    move v0, v13

    move/from16 v1, v18

    if-le v0, v1, :cond_a

    .line 117
    sub-int v11, v13, v18

    .line 118
    .local v11, "length2":I
    sget-object v19, Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;->UTF8:Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$EncodingType;

    move-object v0, v6

    move-object/from16 v1, v19

    if-ne v0, v1, :cond_9

    .line 119
    move-object/from16 v0, p1

    move/from16 v1, v18

    move v2, v11

    invoke-static {v0, v1, v2}, Lcom/evilsunflower/reader/core/util/ZLUnicodeUtil;->utf8Length([BII)I

    move-result p2

    .line 121
    :cond_9
    new-instance v15, Ljava/lang/String;

    move-object v0, v15

    move-object/from16 v1, p1

    invoke-direct {v0, v1}, Ljava/lang/String;-><init>([B)V

    .line 122
    .local v15, "str":Ljava/lang/String;
    new-instance v19, Ljava/lang/StringBuilder;

    invoke-static/range {v17 .. v17}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v20

    invoke-direct/range {v19 .. v20}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    add-int v20, v18, v13

    sub-int v20, v20, v18

    move-object v0, v15

    move/from16 v1, v18

    move/from16 v2, v20

    invoke-virtual {v0, v1, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v20

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    .line 123
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v9

    .end local v4    # "containsSpecialSymbols":Z
    .restart local v9    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    :goto_8
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v19

    if-nez v19, :cond_b

    .line 126
    const-string v17, ""

    .line 128
    .end local v9    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    .end local v11    # "length2":I
    .end local v15    # "str":Ljava/lang/String;
    :cond_a
    add-int/lit8 v18, v13, 0x1

    .line 129
    const/4 v4, 0x0

    .line 130
    .restart local v4    # "containsSpecialSymbols":Z
    goto :goto_7

    .line 124
    .end local v4    # "containsSpecialSymbols":Z
    .restart local v9    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    .restart local v11    # "length2":I
    .restart local v15    # "str":Ljava/lang/String;
    :cond_b
    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;

    move-object v0, v4

    move-object/from16 v1, v17

    move v2, v11

    invoke-virtual {v0, v1, v2}, Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;->processWord(Ljava/lang/String;I)V

    goto :goto_8

    .line 132
    .end local v9    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    .end local v11    # "length2":I
    .end local v15    # "str":Ljava/lang/String;
    .restart local v4    # "containsSpecialSymbols":Z
    :pswitch_2
    const/4 v4, 0x1

    .line 133
    goto :goto_7

    .line 135
    :pswitch_3
    add-int/lit8 v18, v13, 0x1

    .line 136
    const/4 v4, 0x0

    goto :goto_7

    .line 144
    .restart local v8    # "info":Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;
    .restart local v9    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;>;"
    :cond_c
    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;

    .line 145
    .local v10, "itzl":Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;
    invoke-virtual {v10}, Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;->criterion()I

    move-result v5

    .line 146
    .local v5, "criterion":I
    move v0, v5

    move/from16 v1, p3

    if-le v0, v1, :cond_d

    .line 147
    invoke-virtual {v10}, Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;->info()Lcom/evilsunflower/reader/core/language/ZLLanguageDetector$LanguageInfo;

    move-result-object v8

    .line 148
    move/from16 p3, v5

    .line 150
    :cond_d
    invoke-virtual {v10}, Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;->reset()V

    goto/16 :goto_4

    .end local v5    # "criterion":I
    .end local v10    # "itzl":Lcom/evilsunflower/reader/core/language/ZLLanguageMatcher$ZLWordBasedMatcher;
    :cond_e
    move-object/from16 v19, v8

    .line 170
    goto/16 :goto_5

    .line 112
    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch
.end method
