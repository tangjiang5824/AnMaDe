.class public abstract Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;
.super Ljava/lang/Object;
.source "ZLTextHyphenator.java"


# static fields
.field protected static ourInstance:Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;


# direct methods
.method protected constructor <init>()V
    .locals 0

    .prologue
    .line 24
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 25
    return-void
.end method

.method public static Instance()Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;
    .locals 1

    .prologue
    .line 11
    sget-object v0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;->ourInstance:Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;

    if-nez v0, :cond_0

    .line 12
    new-instance v0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;

    invoke-direct {v0}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;-><init>()V

    sput-object v0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;->ourInstance:Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;

    .line 14
    :cond_0
    sget-object v0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;->ourInstance:Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;

    return-object v0
.end method

.method public static deleteInstance()V
    .locals 1

    .prologue
    .line 18
    sget-object v0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;->ourInstance:Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;

    if-eqz v0, :cond_0

    .line 19
    sget-object v0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;->ourInstance:Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;

    invoke-virtual {v0}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;->unload()V

    .line 20
    const/4 v0, 0x0

    sput-object v0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;->ourInstance:Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;

    .line 22
    :cond_0
    return-void
.end method


# virtual methods
.method public getInfo(Lcom/evilsunflower/reader/text/view/ZLTextWord;)Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationInfo;
    .locals 11
    .param p1, "word"    # Lcom/evilsunflower/reader/text/view/ZLTextWord;

    .prologue
    .line 31
    iget v5, p1, Lcom/evilsunflower/reader/text/view/ZLTextWord;->Length:I

    .line 32
    .local v5, "len":I
    new-array v3, v5, [Z

    .line 33
    .local v3, "isLetter":[Z
    add-int/lit8 v9, v5, 0x2

    new-array v7, v9, [C

    .line 34
    .local v7, "pattern":[C
    iget-object v0, p1, Lcom/evilsunflower/reader/text/view/ZLTextWord;->Data:[C

    .line 35
    .local v0, "data":[C
    const/4 v9, 0x0

    const/16 v10, 0x20

    aput-char v10, v7, v9

    .line 36
    const/4 v1, 0x0

    .local v1, "i":I
    iget v4, p1, Lcom/evilsunflower/reader/text/view/ZLTextWord;->Offset:I

    .local v4, "j":I
    :goto_0
    if-lt v1, v5, :cond_0

    .line 45
    add-int/lit8 v9, v5, 0x1

    const/16 v10, 0x20

    aput-char v10, v7, v9

    .line 47
    new-instance v2, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationInfo;

    add-int/lit8 v9, v5, 0x2

    invoke-direct {v2, v9}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationInfo;-><init>(I)V

    .line 48
    .local v2, "info":Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationInfo;
    iget-object v6, v2, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationInfo;->Mask:[Z

    .line 49
    .local v6, "mask":[Z
    add-int/lit8 v9, v5, 0x2

    invoke-virtual {p0, v7, v6, v9}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;->hyphenate([C[ZI)V

    .line 50
    const/4 v1, 0x0

    iget v9, p1, Lcom/evilsunflower/reader/text/view/ZLTextWord;->Offset:I

    const/4 v10, 0x1

    sub-int v4, v9, v10

    :goto_1
    if-le v1, v5, :cond_2

    .line 68
    return-object v2

    .line 37
    .end local v2    # "info":Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationInfo;
    .end local v6    # "mask":[Z
    :cond_0
    aget-char v8, v0, v4

    .line 38
    .local v8, "symbol":C
    invoke-static {v8}, Lcom/evilsunflower/reader/core/util/ZLCharacterUtil;->isLetter(C)Z

    move-result v9

    if-eqz v9, :cond_1

    .line 39
    const/4 v9, 0x1

    aput-boolean v9, v3, v1

    .line 40
    add-int/lit8 v9, v1, 0x1

    invoke-static {v8}, Ljava/lang/Character;->toLowerCase(C)C

    move-result v10

    aput-char v10, v7, v9

    .line 36
    :goto_2
    add-int/lit8 v1, v1, 0x1

    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 42
    :cond_1
    add-int/lit8 v9, v1, 0x1

    const/16 v10, 0x20

    aput-char v10, v7, v9

    goto :goto_2

    .line 51
    .end local v8    # "symbol":C
    .restart local v2    # "info":Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationInfo;
    .restart local v6    # "mask":[Z
    :cond_2
    const/4 v9, 0x2

    if-lt v1, v9, :cond_3

    const/4 v9, 0x2

    sub-int v9, v5, v9

    if-le v1, v9, :cond_4

    .line 52
    :cond_3
    const/4 v9, 0x0

    aput-boolean v9, v6, v1

    .line 50
    :goto_3
    add-int/lit8 v1, v1, 0x1

    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 53
    :cond_4
    aget-char v9, v0, v4

    const/16 v10, 0x2d

    if-ne v9, v10, :cond_6

    .line 54
    const/4 v9, 0x3

    if-lt v1, v9, :cond_5

    .line 55
    const/4 v9, 0x3

    sub-int v9, v1, v9

    aget-boolean v9, v3, v9

    if-eqz v9, :cond_5

    .line 56
    const/4 v9, 0x2

    sub-int v9, v1, v9

    aget-boolean v9, v3, v9

    if-eqz v9, :cond_5

    .line 57
    aget-boolean v9, v3, v1

    if-eqz v9, :cond_5

    .line 58
    add-int/lit8 v9, v1, 0x1

    aget-boolean v9, v3, v9

    if-eqz v9, :cond_5

    const/4 v9, 0x1

    .line 54
    :goto_4
    aput-boolean v9, v6, v1

    goto :goto_3

    .line 58
    :cond_5
    const/4 v9, 0x0

    goto :goto_4

    .line 60
    :cond_6
    aget-boolean v9, v6, v1

    if-eqz v9, :cond_7

    .line 61
    const/4 v9, 0x2

    sub-int v9, v1, v9

    aget-boolean v9, v3, v9

    if-eqz v9, :cond_7

    .line 62
    const/4 v9, 0x1

    sub-int v9, v1, v9

    aget-boolean v9, v3, v9

    if-eqz v9, :cond_7

    .line 63
    aget-boolean v9, v3, v1

    if-eqz v9, :cond_7

    .line 64
    add-int/lit8 v9, v1, 0x1

    aget-boolean v9, v3, v9

    if-eqz v9, :cond_7

    const/4 v9, 0x1

    .line 60
    :goto_5
    aput-boolean v9, v6, v1

    goto :goto_3

    .line 64
    :cond_7
    const/4 v9, 0x0

    goto :goto_5
.end method

.method protected abstract hyphenate([C[ZI)V
.end method

.method public abstract load(Ljava/lang/String;)V
.end method

.method public abstract unload()V
.end method
