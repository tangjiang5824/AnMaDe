.class public final Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;
.super Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;
.source "ZLTextTeXHyphenator.java"


# instance fields
.field private myLanguage:Ljava/lang/String;

.field private final myPatternTable:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;",
            "Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method public constructor <init>()V
    .locals 1

    .prologue
    .line 13
    invoke-direct {p0}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenator;-><init>()V

    .line 10
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;->myPatternTable:Ljava/util/HashMap;

    .line 14
    return-void
.end method


# virtual methods
.method addPattern(Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;)V
    .locals 1
    .param p1, "pattern"    # Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;

    .prologue
    .line 17
    iget-object v0, p0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;->myPatternTable:Ljava/util/HashMap;

    invoke-virtual {v0, p1, p1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 18
    return-void
.end method

.method public hyphenate([C[ZI)V
    .locals 10
    .param p1, "stringToHyphenate"    # [C
    .param p2, "mask"    # [Z
    .param p3, "length"    # I

    .prologue
    const/4 v9, 0x0

    const/4 v8, 0x1

    .line 39
    iget-object v7, p0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;->myPatternTable:Ljava/util/HashMap;

    invoke-virtual {v7}, Ljava/util/HashMap;->isEmpty()Z

    move-result v7

    if-eqz v7, :cond_2

    .line 40
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    sub-int v7, p3, v8

    if-lt v0, v7, :cond_1

    .line 68
    :cond_0
    return-void

    .line 41
    :cond_1
    aput-boolean v9, p2, v0

    .line 40
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 46
    .end local v0    # "i":I
    :cond_2
    add-int/lit8 v7, p3, 0x1

    new-array v6, v7, [B

    .line 48
    .local v6, "values":[B
    iget-object v4, p0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;->myPatternTable:Ljava/util/HashMap;

    .line 50
    .local v4, "table":Ljava/util/HashMap;, "Ljava/util/HashMap<Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;>;"
    new-instance v3, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;

    invoke-direct {v3, p1, v9, p3, v9}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;-><init>([CIIZ)V

    .line 51
    .local v3, "pattern":Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;
    const/4 v2, 0x0

    .local v2, "offset":I
    :goto_1
    sub-int v7, p3, v8

    if-lt v2, v7, :cond_3

    .line 65
    const/4 v0, 0x0

    .restart local v0    # "i":I
    :goto_2
    sub-int v7, p3, v8

    if-ge v0, v7, :cond_0

    .line 66
    add-int/lit8 v7, v0, 0x1

    aget-byte v7, v6, v7

    rem-int/lit8 v7, v7, 0x2

    if-ne v7, v8, :cond_6

    move v7, v8

    :goto_3
    aput-boolean v7, p2, v0

    .line 65
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    .line 52
    .end local v0    # "i":I
    :cond_3
    sub-int v7, p3, v2

    add-int/lit8 v1, v7, 0x1

    .line 53
    .local v1, "len":I
    sub-int v7, v1, v8

    invoke-virtual {v3, p1, v2, v7}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;->update([CII)V

    .line 54
    :cond_4
    :goto_4
    add-int/lit8 v1, v1, -0x1

    if-gtz v1, :cond_5

    .line 51
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 55
    :cond_5
    iput v1, v3, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;->myLength:I

    .line 56
    iput v9, v3, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;->myHashCode:I

    .line 58
    invoke-virtual {v4, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;

    .line 59
    .local v5, "toApply":Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;
    if-eqz v5, :cond_4

    .line 60
    invoke-virtual {v5, v6, v2}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;->apply([BI)V

    goto :goto_4

    .end local v1    # "len":I
    .end local v5    # "toApply":Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenationPattern;
    .restart local v0    # "i":I
    :cond_6
    move v7, v9

    .line 66
    goto :goto_3
.end method

.method public load(Ljava/lang/String;)V
    .locals 3
    .param p1, "language"    # Ljava/lang/String;

    .prologue
    .line 21
    iget-object v0, p0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;->myLanguage:Ljava/lang/String;

    invoke-static {p1, v0}, Lcom/evilsunflower/reader/core/util/ZLMiscUtil;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 32
    :cond_0
    :goto_0
    return-void

    .line 24
    :cond_1
    iput-object p1, p0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;->myLanguage:Ljava/lang/String;

    .line 25
    invoke-virtual {p0}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;->unload()V

    .line 27
    if-eqz p1, :cond_0

    .line 28
    new-instance v0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationReader;

    invoke-direct {v0, p0}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationReader;-><init>(Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;)V

    .line 29
    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "hyphenationPatterns/"

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ".pattern"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 28
    invoke-static {v1}, Lcom/evilsunflower/reader/core/filesystem/ZLResourceFile;->createResourceFile(Ljava/lang/String;)Lcom/evilsunflower/reader/core/filesystem/ZLResourceFile;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/evilsunflower/reader/text/hyphenation/ZLTextHyphenationReader;->read(Lcom/evilsunflower/reader/core/filesystem/ZLFile;)Z

    goto :goto_0
.end method

.method public unload()V
    .locals 1

    .prologue
    .line 35
    iget-object v0, p0, Lcom/evilsunflower/reader/text/hyphenation/ZLTextTeXHyphenator;->myPatternTable:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    .line 36
    return-void
.end method
